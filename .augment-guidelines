# Augment Guidelines: LinkedIn Executive Opportunities System

## Project Overview
This system identifies and analyzes executive job opportunities on LinkedIn for business development and product discovery at Giki.ai. The goal is to find the right executives at growing companies who will shape our product development direction.

## Human-Readable Output Structure

### 1. Daily Reports (`reports/daily/`)
- **Format**: Markdown files named `YYYY-MM-DD.md`
- **Content**: New opportunities found, key insights, recommended actions
- **Audience**: Quick daily review for Nikhil and Rahul

### 2. Company Profiles (`companies/`)
- **Format**: Individual markdown files per company
- **Naming**: `company-name.md` (lowercase, hyphenated)
- **Content**: Detailed company analysis, contact strategy, opportunity assessment

### 3. Weekly Summaries (`reports/weekly/`)
- **Format**: Comprehensive markdown reports
- **Content**: Trends, top opportunities, pipeline status, next week's focus

### 4. Executive Dashboard (`dashboard.md`)
- **Real-time overview** of all opportunities
- **Priority matrix** (AI Affinity vs Business Opportunity)
- **Action items** for team

## Data Collection Guidelines

### Target Roles
- Chief of Staff
- Founder's Office positions
- CFO / Fractional CFO
- VP Finance / FinOps

### Company Criteria
- **Stage**: Seed to Series C (growth companies)
- **AI Affinity**: Companies showing automation/AI interest
- **Metrics Focus**: Roles requiring financial/operational tracking

### Scoring System
- **AI Affinity Score**: 1-10 (readiness for AI/automation solutions)
- **Business Opportunity Score**: 1-10 (potential for Giki.ai engagement)
- **Priority Threshold**: Both scores ≥ 8 for immediate action

## Automation Workflow

### LinkedIn Search Process
1. **Authentication**: Use stored credentials autonomously
2. **Search Terms**: Rotate through target role keywords
3. **Data Extraction**: Company, role, requirements, contact info
4. **Analysis**: Score opportunities and identify solutions

### GitHub Integration
1. **Data Storage**: All raw data in `/data/` directory
2. **Human Reports**: Generated in `/reports/` directory
3. **Company Profiles**: Individual files in `/companies/`
4. **Commit Strategy**: Daily commits with meaningful messages

### Team Collaboration
- **Nikhil**: Data collection, analysis, system maintenance
- **Rahul**: Business development, outreach, strategic direction
- **Communication**: Via GitHub issues and commit messages

## Quality Standards

### Data Accuracy
- Verify company stage and size
- Validate contact information
- Cross-reference job requirements with AI solutions

### Report Quality
- Clear, actionable insights
- Specific contact strategies
- Quantified opportunity assessments

### Update Frequency
- **Daily**: New opportunities and quick insights
- **Weekly**: Comprehensive analysis and trends
- **Monthly**: Strategic review and system optimization

## Success Metrics
- Number of high-quality opportunities identified
- Conversion rate from identification to contact
- Product insights gained from market analysis
- Business development pipeline growth

## System Maintenance
- Regular LinkedIn search automation
- Data quality checks
- Report generation and formatting
- GitHub repository organization

## Enhanced Opportunity Research

### Smart Workflow for High-Priority Targets
When opportunities score ≥ 8/8, automatically conduct deeper research:

1. **Contact Identification**
   - Find job poster (hiring manager, HR, recruiter)
   - Identify decision makers (founders, C-level executives)
   - Map reporting structure and key stakeholders

2. **Leadership Research**
   - Founder/co-founder backgrounds and LinkedIn profiles
   - Senior executives relevant to our solutions
   - Previous experience with AI/automation tools
   - Investment history and growth trajectory

3. **Company Intelligence**
   - Recent funding rounds and investor information
   - Technology stack and current tools
   - Growth metrics and public statements
   - Competitive landscape and positioning

### Research Execution
- Conduct research AFTER initial opportunity identification
- Focus on companies with scores ≥ 8/8 for efficiency
- Store findings in individual company profile files
- Update contact strategy based on research insights

## Handoff Procedures

### Thread Resumption Protocol
When user says "resume", "let's resume", "resume from previous thread", "let's fucking go", or similar:
1. **Read latest commit messages** for session status
2. **Check dashboard.md** for current priorities
3. **Review .augment-guidelines** for any instruction updates
4. **Continue from last documented state** without asking for context

### After Every Run
1. **Commit & Push**: All new data and reports must be committed with descriptive messages
2. **Handoff via Commit Messages**: Use commit messages as primary handoff mechanism
3. **No Separate Persistence**: GitHub commits serve as the handoff documentation
4. **Business Focus**: Only commit business-relevant outputs, not development artifacts

### Commit Message Format
```
[SESSION] Brief description of work completed

- Key findings: X new opportunities, Y high-priority targets
- Actions taken: LinkedIn searches, data analysis, report generation
- Next recommended actions: Specific steps for team
- Status: Ready for [Nikhil/Rahul] review and action
```

### Repository Purpose
- **PRIMARY**: Business intelligence and opportunity tracking
- **NOT**: Development or code repository
- **FOCUS**: Human-readable business outcomes only
- **AUDIENCE**: Nikhil, Rahul, and business stakeholders

## File Management

### Include in Repository
- ✅ Markdown reports (dashboard, daily, weekly, company profiles)
- ✅ Structured data files (JSON, CSV) for business analysis
- ✅ README and guidelines for context
- ✅ Human-editable content that drives business decisions

### Exclude from Repository (.gitignore)
- ❌ Development artifacts (node_modules, build files)
- ❌ Temporary files and logs
- ❌ Code development materials
- ❌ Non-business related technical files

---
*This system is designed for autonomous operation with minimal human intervention while maximizing business value. All development work should be done in separate repositories.*
